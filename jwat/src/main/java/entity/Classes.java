package entity;
// Generated Feb 20, 2020, 1:47:43 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Classes generated by hbm2java
 */
@Entity
@Table(name = "classes", catalog = "jwat_v2")
public class Classes implements java.io.Serializable {

	private int id;
	private Courses courses;
	private String name;
	private String description;
	private String note;
	private Set<Users> userses = new HashSet<Users>(0);
	private Set<Chapter> chapters = new HashSet<Chapter>(0);

	public Classes() {
	}

	public Classes(int id) {
		this.id = id;
	}

	public Classes(int id, Courses courses, String name, String description, String note, Set<Users> userses,
			Set<Chapter> chapters) {
		this.id = id;
		this.courses = courses;
		this.name = name;
		this.description = description;
		this.note = note;
		this.userses = userses;
		this.chapters = chapters;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "courses_id")
	public Courses getCourses() {
		return this.courses;
	}

	public void setCourses(Courses courses) {
		this.courses = courses;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "note", length = 65535)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_in_class", catalog = "jwat_v2", joinColumns = {
			@JoinColumn(name = "class_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_id", nullable = false, updatable = false) })
	public Set<Users> getUserses() {
		return this.userses;
	}

	public void setUserses(Set<Users> userses) {
		this.userses = userses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classes")
	public Set<Chapter> getChapters() {
		return this.chapters;
	}

	public void setChapters(Set<Chapter> chapters) {
		this.chapters = chapters;
	}

}
