package entity;
// Generated Feb 20, 2020, 1:47:43 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity (name = "users")
@Table(name = "users", catalog = "jwat_v2", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Users implements java.io.Serializable {

	private int id;
	private String email;
	private String username;
	private String password;
	private String phoneNumber;
	private String address;
	private Date dob;
	private String university;
	private Boolean isAdmin;
	private Integer status;
	private Date updatedAt;
	private Date createdAt;
	private Date deactivedAt;
	private Set<UserSeenNotification> userSeenNotifications = new HashSet<UserSeenNotification>(0);
	private Set<RollCalls> rollCallses = new HashSet<RollCalls>(0);
	private Set<Classes> classeses = new HashSet<Classes>(0);
	private Set<StudentRegisterSchedule> studentRegisterSchedules = new HashSet<StudentRegisterSchedule>(0);
	private Set<Chapter> chapters = new HashSet<Chapter>(0);

	public Users() {
	}

	public Users(int id) {
		this.id = id;
	}

	public Users(int id, String email, String username, String password, String phoneNumber, String address, Date dob,
			String university, Boolean isAdmin, Integer status, Date updatedAt, Date createdAt, Date deactivedAt,
			Set<UserSeenNotification> userSeenNotifications, Set<RollCalls> rollCallses, Set<Classes> classeses,
			Set<StudentRegisterSchedule> studentRegisterSchedules, Set<Chapter> chapters) {
		this.id = id;
		this.email = email;
		this.username = username;
		this.password = password;
		this.phoneNumber = phoneNumber;
		this.address = address;
		this.dob = dob;
		this.university = university;
		this.isAdmin = isAdmin;
		this.status = status;
		this.updatedAt = updatedAt;
		this.createdAt = createdAt;
		this.deactivedAt = deactivedAt;
		this.userSeenNotifications = userSeenNotifications;
		this.rollCallses = rollCallses;
		this.classeses = classeses;
		this.studentRegisterSchedules = studentRegisterSchedules;
		this.chapters = chapters;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "email", unique = true, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "username", length = 100)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "phone_number", length = 100)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "address", length = 65535)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dob", length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "university", length = 65535)
	public String getUniversity() {
		return this.university;
	}

	public void setUniversity(String university) {
		this.university = university;
	}

	@Column(name = "is_admin")
	public Boolean getIsAdmin() {
		return this.isAdmin;
	}

	public void setIsAdmin(Boolean isAdmin) {
		this.isAdmin = isAdmin;
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_at", length = 10)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_at", length = 10)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "deactived_at", length = 10)
	public Date getDeactivedAt() {
		return this.deactivedAt;
	}

	public void setDeactivedAt(Date deactivedAt) {
		this.deactivedAt = deactivedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UserSeenNotification> getUserSeenNotifications() {
		return this.userSeenNotifications;
	}

	public void setUserSeenNotifications(Set<UserSeenNotification> userSeenNotifications) {
		this.userSeenNotifications = userSeenNotifications;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<RollCalls> getRollCallses() {
		return this.rollCallses;
	}

	public void setRollCallses(Set<RollCalls> rollCallses) {
		this.rollCallses = rollCallses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_in_class", catalog = "jwat_v2", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "class_id", nullable = false, updatable = false) })
	public Set<Classes> getClasseses() {
		return this.classeses;
	}

	public void setClasseses(Set<Classes> classeses) {
		this.classeses = classeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<StudentRegisterSchedule> getStudentRegisterSchedules() {
		return this.studentRegisterSchedules;
	}

	public void setStudentRegisterSchedules(Set<StudentRegisterSchedule> studentRegisterSchedules) {
		this.studentRegisterSchedules = studentRegisterSchedules;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "process", catalog = "jwat_v2", joinColumns = {
			@JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "chapter_id", nullable = false, updatable = false) })
	public Set<Chapter> getChapters() {
		return this.chapters;
	}

	public void setChapters(Set<Chapter> chapters) {
		this.chapters = chapters;
	}

}
